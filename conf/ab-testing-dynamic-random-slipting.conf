user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log info;
pid /var/run/nginx.pid;
events {
    worker_connections 1024;
}
http {
    default_type text/html;
    log_format main '$remote_addr -> $request $status $body_bytes_sent bytes -> $upstream_addr';
    access_log /var/log/nginx/access.log main;

    upstream appversion1 {
        server 127.0.0.1:3001;
    }

    upstream appversion2 {
        server 127.0.0.1:4001;
    }

    keyval_zone zone=split:64k state=/etc/nginx/state_files/split.json;
    keyval $host $split_level zone=split;

    split_clients $client_ip $split0 {
        * appversion1;
    }
    split_clients $client_ip $split5 {
        5% appversion2;
        * appversion1;
    }
    split_clients $client_ip $split10 {
        10% appversion2;
        * appversion1;
    }
    split_clients $client_ip $split25 {
        25% appversion2;
        * appversion1;
    }
    split_clients $client_ip $split50 {
        50% appversion2;
        * appversion1;
    }
    split_clients $client_ip $split100 {
        * appversion2;
    }

    map $split_level $upstream {
        0 $split0;
        5 $split5;
        10 $split10;
        25 $split25;
        50 $split50;
        100 $split100;
        default $split0;
    }

    server {
        listen 3001;
        location / {
            return 200 "Request_id: $request_id\tServer from version A. \n";
        }
    }

    server {
        listen 4001;
        location / {
            return 200 "Request_id: $request_id\tServer from version B!! \n";
        }
    }

    server {
        listen 80;
        server_name "www.example.com";

        #set $client_ip $remote_addr; # Production
        set $client_ip $request_id; # Testing only

        location / {
            proxy_set_header Host $host;
            proxy_pass http://$upstream;
        }

        # Configure the NGINX Plus API and dashboard. For production, add directives
        # to restrict access to the API, for example 'allow' and 'deny'.
        location /api {
            api write=on;
            # in production, directives restricting access
        }

        location = /dashboard.html {
            root /usr/share/nginx/html;
        }

    }

    server {
        listen 80;
        server_name "www2.example.com";

        #set $client_ip $remote_addr; # Production
        set $client_ip $request_id; # Testing only

        location / {
            proxy_set_header Host $host;
            proxy_pass http://$upstream;
        }
    }

}